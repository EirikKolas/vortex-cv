name: Publish Docker image to ghcr

on:
  push:
    branches: 
    - feature/docker

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout own repository
        uses: actions/checkout@v3

      # Copy vortex_msgs to image
      - name: Checkout vortex_msgs
        uses: actions/checkout@v3
        with:
          repository: 'vortexntnu/vortex-msgs'
          path: './vortex-msgs'  
      - name: Move vortex_msgs
        run: mv ./vortex-msgs ../vortex-msgs

      # Copy ddynamic_reconfigure_python to image
      - name: Checkout ddynamic_reconfigure_python
        uses: actions/checkout@v3
        with:
          repository: 'pal-robotics/ddynamic_reconfigure_python'
          path: './ddynamic_reconfigure_python'
      - name: Move ddynamic_reconfigure_python
        run: mv ./ddynamic_reconfigure_python ../ddynamic_reconfigure_python

      # Copy darknet_ros_zed to image
      - name: Checkout darknet_ros_zed
        uses: actions/checkout@v3
        with:
          repository: 'vortexntnu/darknet_ros_zed'
          path: './darknet_ros_zed'  
      - name: Move darknet_ros_zed
        run: mv ./darknet_ros_zed ../darknet_ros_zed

      # Upload image to ghcr
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: metacv                    /vortex_ws/src/vortex-cv
COPY ./vortex-msgs                  /vortex_ws/src/vortex-msgs
COPY ./darknet_ros_zed              /vortex_ws/src/darknet_ros_zed
COPY ./ddynamic_reconfigure_python  /vortex_ws/src/ddynamic_reconfigure_python
age
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ..
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}